"""
Модуль токенов
"""


class Token:
    """
    Родительский класс Токенов

    Атрибуты:
        value (str): значение токена
    """

    value: str

    def __init__(self, token: str) -> None:
        """
        Инициализация токена
        """
        self.value = token

    def get_token(self) -> str:
        """
        Функция, возвращающая значение токена

        Возвращаемое значение:
            str: токен в виде строки
        """
        return self.value

    def __repr__(self) -> str:
        """
        Переопределение магического метода для более удобного вывода

        Возвращаемое значение:
            str: строка в репрезентабельном виде
        """
        return f"{type(self).__name__}({self.value})"

    def __str__(self) -> str:
        """
        Переопределения магического метода для более удобного вывода

        Возвращаемое значение:
            str: строковое представление токена
        """
        return self.value


class Operator(Token):
    """
    Класс, представляющий токен-оператор, являющийся дочерним классом Token

    Атрибуты класс:
        PLUS (str): строковое представление операции сложения (+)
        MINUS (str): строковое представление операции вычитания (-)
        MULTIPLICATION (str): строковое представление операции умножения (*)
        POWER (str): строковое представление операции возведение в степень (**)
        DIVISION (str): строковое представление операции деления (/)
        INTEGER_DIVISION (str): строковое представление операции целочисленного деления (//)
        LEFT_BRACKET (str): строковое представление открывающей круглой скобки
        RIGHT_BRACKET (str): строковое представление закрывающей круглой скобки
        REMAINDER_DIVISION (str): строковое представление операции взятия остатка от деления (%)
    """

    PLUS = "+"
    MINUS = "-"
    MULTIPLICATION = "*"
    POWER = "**"
    DIVISION = "/"
    INTEGER_DIVISION = "//"
    LEFT_BRACKET = "("
    RIGHT_BRACKET = ")"
    REMAINDER_DIVISION = "%"

    def __init__(self, token: str):
        """
        Инициализация атрибутов родительского класс
        """
        super().__init__(token)


class Number(Token):
    """
    Класс, представляющий токен-число, являющийся дочерним классом Token

    Атрибуты класс:
        NUMBER_DOT (str): представление точки в числе с плавающей точкой

    Атрибуты объекта:
        __is_integer (bool): определяет целочисленное число или нет
    """

    NUMBER_DOT = "."

    __is_integer: bool

    def __init__(self, token: str, is_integer: bool):
        """
        Инициализация атрибутов родительского класса
        Установка флага __is_integer
        """
        super().__init__(token)
        self.__is_integer = is_integer

    def is_integer(self) -> bool:
        """
        Функция, проверяющая, является ли число в токене целочисленным или нет

        Возвращаемое значение:
            bool
        """
        return self.__is_integer

    def is_float(self) -> bool:
        """
        Функция, проверяющая, является ли число в токене числом с плавающей точкой или нет

        Возвращаемое значение:
            bool
        """
        return not self.__is_integer
